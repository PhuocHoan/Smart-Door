[
    {
        "id": "4631a2b59dfd677a",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6dfb15b344c2961c",
        "type": "group",
        "z": "4631a2b59dfd677a",
        "name": "limit temperature",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "cc00546aa673fb49",
            "07830cdb4f68c385",
            "36b49a583836c182",
            "85afedadf775cceb",
            "b071595d63be4bc7",
            "d79b04b4a5536ed1",
            "ec0ebe10e959a763",
            "8ce6d8ac199aad90",
            "29dee60e141d9da4",
            "6568b3915dfa3313",
            "f22b405d21f99503",
            "80dd5ce010738fe8",
            "80cc11207e07aa9b",
            "9d54b4da80bcb14b",
            "2443f42173d401a3"
        ],
        "x": 14,
        "y": 1419,
        "w": 1682,
        "h": 262
    },
    {
        "id": "afc07466b4873662",
        "type": "group",
        "z": "4631a2b59dfd677a",
        "name": "temperature and humidity",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "2c84fe5c02ad3f23",
            "95fd3b1e32f20408",
            "e6833cdada59b059",
            "a1a21568e8568693",
            "ea0175886c395246",
            "ac735f99c6d6eca5",
            "2a8f6b11d0349d5c",
            "43423cdb8c31e5e5",
            "9660bb95a2ca582a",
            "21a22b475ae206e9",
            "32ed4314a858a68d",
            "1cd1f3fc094fea3e",
            "07432d98b879fb34",
            "14d3502095e4a458",
            "c889ad684698620e",
            "159a09cd78d3c38b",
            "1d3426b3f513d23f",
            "ce1ae7a671d9438b",
            "5f951a101cc75ce5",
            "efe454c1ea64c915",
            "25d2c8a76441a484",
            "e8a4c912980bc9b3"
        ],
        "x": 14,
        "y": 1059,
        "w": 1812,
        "h": 342
    },
    {
        "id": "eff3ad7f62a75390",
        "type": "group",
        "z": "4631a2b59dfd677a",
        "name": "Door",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "587f09e26b265b3f",
            "1e86723b830328f5",
            "4101e836f05d8b17",
            "aa6d7e7e9d2df0ad",
            "475425f1c0bf25e0",
            "8eb9d1ef59c5e2b0",
            "9718915aec5536b8",
            "789a4cf30908f79a",
            "41c9fb9675d26ecd",
            "cba8d1f056253405",
            "2e80a4e19e689862",
            "ef8280d3b071ade2",
            "dec7e3de26634e12",
            "e17e02dcae360af9",
            "ae542ec5da0292ae",
            "02a568866560b794",
            "9ab4b6dd25c68f9a",
            "b4bb77b2bcebd3dc",
            "3ab01693da032eeb",
            "21fd9ad6824ce739",
            "008c6858f232530d",
            "615f843e2eeca331",
            "252f1d5bae19dca3"
        ],
        "x": 14,
        "y": 619,
        "w": 1432,
        "h": 422
    },
    {
        "id": "04c020d95a5805d8",
        "type": "group",
        "z": "4631a2b59dfd677a",
        "name": "Login Page",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "86436bcae18f2467",
            "7ba9eca6a52e12d2",
            "122f082ca2f55c50",
            "208a0c06d39b24f4",
            "78a58bbbc2900563",
            "b529c1f1ba439492",
            "01a86b338ceef7b9",
            "e88fa1a3abaeaf51",
            "f89fa194367eb61d",
            "2a8d10927e1a2074",
            "f5cfc54209ccede2",
            "5537a84ab728e24e",
            "4cf4e1b8658d5680"
        ],
        "x": 14,
        "y": 19,
        "w": 1252,
        "h": 302
    },
    {
        "id": "6109487045531d46",
        "type": "group",
        "z": "4631a2b59dfd677a",
        "name": "Register Page",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "a6cf0a4d09f0db14",
            "51ae6ee0f02bdc03",
            "b8489eb530e9320a",
            "23d631cfe477f569",
            "eef60defbf35577e",
            "023f8cbb33d7f08a",
            "c60dada5f99ce185",
            "94b4f41fa6b3968b",
            "1170b0f0bb7add05",
            "a61acaac53031d76",
            "5450304bbd92ef6d",
            "f24cf0b58bf6ab7f",
            "2f052e2bedaf1d29",
            "ded7db464c40a35e",
            "c7ff95bc744a22ee"
        ],
        "x": 14,
        "y": 339,
        "w": 1422,
        "h": 262
    },
    {
        "id": "994e07498d4b9f3e",
        "type": "group",
        "z": "4631a2b59dfd677a",
        "name": "Email subscription",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "75e149d83a4a2323",
            "5b415d3a960a726e",
            "598932cb436af570",
            "c923d1ac62ada477",
            "e2298bfabb5911a6",
            "98298c34ec0a43af",
            "7b30d6d4b2dbdde4",
            "c82da687ef5470dc",
            "66ea9c2fa47efd20",
            "179e9a78e38b463e",
            "c1a0897af2ac3b9b",
            "fde39f50bff6157d"
        ],
        "x": 14,
        "y": 1699,
        "w": 1352,
        "h": 242
    },
    {
        "id": "fc9d4bb775c2f470",
        "type": "group",
        "z": "4631a2b59dfd677a",
        "name": "Send Email",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "3435c25c820d8bad",
            "6a29014a311329aa",
            "484d82de9eec77f1",
            "136a4eaff7866293",
            "91b0974e07be2b66",
            "8409fd046d135e35",
            "bc2f4ec82b42b41a",
            "8e8308b77a7ed0a5"
        ],
        "x": 14,
        "y": 1999,
        "w": 1112,
        "h": 342
    },
    {
        "id": "2c84fe5c02ad3f23",
        "type": "mqtt in",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "topic": "/group_21/local/temperature/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc3a9abe83c90bd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 1260,
        "wires": [
            [
                "e6833cdada59b059",
                "ea0175886c395246",
                "43423cdb8c31e5e5",
                "ce1ae7a671d9438b"
            ]
        ]
    },
    {
        "id": "95fd3b1e32f20408",
        "type": "mqtt in",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "topic": "/group_21/local/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc3a9abe83c90bd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1160,
        "wires": [
            [
                "a1a21568e8568693"
            ]
        ]
    },
    {
        "id": "cc00546aa673fb49",
        "type": "ui_slider",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "Lower Bound Temperature",
        "label": "Lower Bound",
        "tooltip": "",
        "group": "242bb5e8cc6e236f",
        "order": 4,
        "width": 7,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-40",
        "max": "80",
        "step": 1,
        "x": 760,
        "y": 1520,
        "wires": [
            [
                "8ce6d8ac199aad90"
            ]
        ]
    },
    {
        "id": "07830cdb4f68c385",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "store lower temp",
        "rules": [
            {
                "t": "set",
                "p": "lowerTemp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "x": 1320,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "36b49a583836c182",
        "type": "ui_slider",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "Upper Bound Temperature",
        "label": "Upper Bound",
        "tooltip": "",
        "group": "242bb5e8cc6e236f",
        "order": 3,
        "width": 7,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-40",
        "max": "80",
        "step": 1,
        "x": 760,
        "y": 1620,
        "wires": [
            [
                "29dee60e141d9da4"
            ]
        ]
    },
    {
        "id": "85afedadf775cceb",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "store upper temp",
        "rules": [
            {
                "t": "set",
                "p": "upperTemp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "x": 1330,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "b071595d63be4bc7",
        "type": "ui_text",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "group": "242bb5e8cc6e236f",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Adjust warning Temperature",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 640,
        "y": 1460,
        "wires": []
    },
    {
        "id": "587f09e26b265b3f",
        "type": "mqtt in",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "topic": "/group_21/local/door_unlock",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc3a9abe83c90bd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 860,
        "wires": [
            [
                "aa6d7e7e9d2df0ad"
            ]
        ]
    },
    {
        "id": "1e86723b830328f5",
        "type": "mqtt in",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "topic": "/group_21/local/door_lock",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc3a9abe83c90bd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "4101e836f05d8b17"
            ]
        ]
    },
    {
        "id": "4101e836f05d8b17",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "close door successfully",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "close successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "789a4cf30908f79a",
                "b4bb77b2bcebd3dc"
            ]
        ]
    },
    {
        "id": "aa6d7e7e9d2df0ad",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 860,
        "wires": [
            [
                "9718915aec5536b8"
            ],
            [
                "02a568866560b794"
            ]
        ]
    },
    {
        "id": "475425f1c0bf25e0",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "send warning security to user",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pushsafer.com/api?k=reEGV3kYmW6aoEuJp7Dk&m={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 980,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "8eb9d1ef59c5e2b0",
        "type": "ui_text",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "group": "d1aef56c328c2c49",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Door status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1170,
        "y": 880,
        "wires": []
    },
    {
        "id": "9718915aec5536b8",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "open door successfully",
        "rules": [
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "open",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "open successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 840,
        "wires": [
            [
                "8eb9d1ef59c5e2b0",
                "b4bb77b2bcebd3dc"
            ]
        ]
    },
    {
        "id": "789a4cf30908f79a",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "close",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1000,
        "wires": [
            [
                "8eb9d1ef59c5e2b0"
            ]
        ]
    },
    {
        "id": "e6833cdada59b059",
        "type": "ui_gauge",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "group": "d1aef56c328c2c49",
        "order": 3,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Temperature",
        "label": "",
        "format": "{{value}}°C",
        "min": "-40",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 830,
        "y": 1260,
        "wires": []
    },
    {
        "id": "a1a21568e8568693",
        "type": "ui_gauge",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "group": "d1aef56c328c2c49",
        "order": 4,
        "width": 6,
        "height": 5,
        "gtype": "wave",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 440,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ea0175886c395246",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "check temp corresponding to temp status",
        "func": "var lowerTemp = flow.get('lowerTemp')\nvar upperTemp = flow.get('upperTemp')\nif (msg.payload > upperTemp) {\n    msg.payload = \"High\"\n} else if (lowerTemp <= msg.payload && msg.payload <= upperTemp) {\n    msg.payload = \"Normal\"\n    flow.set(\"alreadySentHigh\", false)\n    flow.set(\"alreadySentLow\", false)\n} else {\n    msg.payload = \"Low\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1320,
        "wires": [
            [
                "ac735f99c6d6eca5"
            ]
        ]
    },
    {
        "id": "ac735f99c6d6eca5",
        "type": "ui_text",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "group": "d1aef56c328c2c49",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Temperature status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1070,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d79b04b4a5536ed1",
        "type": "mqtt in",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "",
        "topic": "/group_21/local/temperature/upper_bound",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc3a9abe83c90bd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 1620,
        "wires": [
            [
                "9d54b4da80bcb14b"
            ]
        ]
    },
    {
        "id": "ec0ebe10e959a763",
        "type": "mqtt in",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "",
        "topic": "/group_21/local/temperature/lower_bound",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cc3a9abe83c90bd8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 1520,
        "wires": [
            [
                "2443f42173d401a3"
            ]
        ]
    },
    {
        "id": "41c9fb9675d26ecd",
        "type": "mqtt out",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "topic": "/group_21/web/door",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "cc3a9abe83c90bd8",
        "x": 920,
        "y": 660,
        "wires": []
    },
    {
        "id": "8ce6d8ac199aad90",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "check temperature limit condition",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "upperTemp",
                "vt": "flow"
            },
            {
                "t": "gte",
                "v": "upperTemp",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1520,
        "wires": [
            [
                "07830cdb4f68c385"
            ],
            [
                "80cc11207e07aa9b"
            ]
        ]
    },
    {
        "id": "29dee60e141d9da4",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "check temperature limit condition",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "lowerTemp",
                "vt": "flow"
            },
            {
                "t": "lte",
                "v": "lowerTemp",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1620,
        "wires": [
            [
                "85afedadf775cceb"
            ],
            [
                "80dd5ce010738fe8"
            ]
        ]
    },
    {
        "id": "6568b3915dfa3313",
        "type": "ui_toast",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1580,
        "y": 1540,
        "wires": []
    },
    {
        "id": "f22b405d21f99503",
        "type": "ui_toast",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1580,
        "y": 1640,
        "wires": []
    },
    {
        "id": "80dd5ce010738fe8",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The upper limit temperature must be greater than the lower limit temperature.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1640,
        "wires": [
            [
                "f22b405d21f99503"
            ]
        ]
    },
    {
        "id": "80cc11207e07aa9b",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The lower limit temperature must be less than the upper limit temperature.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1540,
        "wires": [
            [
                "6568b3915dfa3313"
            ]
        ]
    },
    {
        "id": "9d54b4da80bcb14b",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "set default temp limit",
        "func": "if (flow.get('upperTemp') == undefined) {\n    flow.set('upperTemp', msg.payload)\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1620,
        "wires": [
            [
                "36b49a583836c182"
            ]
        ]
    },
    {
        "id": "2443f42173d401a3",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "6dfb15b344c2961c",
        "name": "set default temp limit",
        "func": "if (flow.get('lowerTemp') == undefined) {\n    flow.set('lowerTemp', msg.payload)\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1520,
        "wires": [
            [
                "cc00546aa673fb49"
            ]
        ]
    },
    {
        "id": "cba8d1f056253405",
        "type": "ui_button",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "group": "242bb5e8cc6e236f",
        "order": 1,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "open/close Door",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 800,
        "wires": [
            [
                "2e80a4e19e689862"
            ]
        ]
    },
    {
        "id": "2e80a4e19e689862",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "property": "status",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "open",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "close",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 740,
        "wires": [
            [
                "ef8280d3b071ade2"
            ],
            [
                "dec7e3de26634e12"
            ]
        ]
    },
    {
        "id": "ef8280d3b071ade2",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "open->close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "close",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "close successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 680,
        "wires": [
            [
                "41c9fb9675d26ecd",
                "e17e02dcae360af9",
                "b4bb77b2bcebd3dc"
            ]
        ]
    },
    {
        "id": "dec7e3de26634e12",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "close->open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "open",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "open successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "41c9fb9675d26ecd",
                "ae542ec5da0292ae",
                "b4bb77b2bcebd3dc"
            ]
        ]
    },
    {
        "id": "e17e02dcae360af9",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 720,
        "wires": [
            [
                "8eb9d1ef59c5e2b0"
            ]
        ]
    },
    {
        "id": "ae542ec5da0292ae",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 760,
        "wires": [
            [
                "8eb9d1ef59c5e2b0"
            ]
        ]
    },
    {
        "id": "2a8f6b11d0349d5c",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "send warning temperature to user",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pushsafer.com/api?k=reEGV3kYmW6aoEuJp7Dk&m={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1340,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "43423cdb8c31e5e5",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "upperTemp",
                "vt": "flow"
            },
            {
                "t": "lt",
                "v": "lowerTemp",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 1180,
        "wires": [
            [
                "07432d98b879fb34"
            ],
            [
                "c889ad684698620e"
            ]
        ]
    },
    {
        "id": "9660bb95a2ca582a",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The temperature in the house is very high !!!, there may be a fire",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1140,
        "wires": [
            [
                "2a8f6b11d0349d5c",
                "3435c25c820d8bad"
            ]
        ]
    },
    {
        "id": "21a22b475ae206e9",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The temperature in the house is very low!!!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1200,
        "wires": [
            [
                "2a8f6b11d0349d5c",
                "3435c25c820d8bad"
            ]
        ]
    },
    {
        "id": "02a568866560b794",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "open door fail",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "someone is trying to sneak into the house",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "open fail",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 900,
        "wires": [
            [
                "475425f1c0bf25e0",
                "b4bb77b2bcebd3dc",
                "3435c25c820d8bad"
            ]
        ]
    },
    {
        "id": "32ed4314a858a68d",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "create variable flow.alreadySentLow",
        "rules": [
            {
                "t": "set",
                "p": "alreadySentLow",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "1cd1f3fc094fea3e",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alreadySentHigh",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "07432d98b879fb34",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "property": "alreadySentHigh",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 1120,
        "wires": [
            [
                "9660bb95a2ca582a",
                "1cd1f3fc094fea3e"
            ]
        ]
    },
    {
        "id": "14d3502095e4a458",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "create variable flow.alreadySentHigh",
        "rules": [
            {
                "t": "set",
                "p": "alreadySentHigh",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "c889ad684698620e",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "property": "alreadySentLow",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 1220,
        "wires": [
            [
                "21a22b475ae206e9",
                "159a09cd78d3c38b"
            ]
        ]
    },
    {
        "id": "159a09cd78d3c38b",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alreadySentLow",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "9ab4b6dd25c68f9a",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "door status to cloud",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=VEA6S3YIJ020J415&field2={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1110,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "b4bb77b2bcebd3dc",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "door",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 820,
        "wires": [
            [
                "9ab4b6dd25c68f9a"
            ]
        ]
    },
    {
        "id": "3ab01693da032eeb",
        "type": "ui_table",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "group": "975a56c88443a6df",
        "name": "History",
        "order": 2,
        "width": 12,
        "height": 4,
        "columns": [
            {
                "field": "",
                "title": "",
                "width": "10%",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "action",
                "title": "Action",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1360,
        "y": 880,
        "wires": []
    },
    {
        "id": "21fd9ad6824ce739",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "read door status from cloud",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2622714/fields/2.json?api_key=ZBTV7AF559WPETU0&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1280,
        "y": 720,
        "wires": [
            [
                "008c6858f232530d"
            ]
        ]
    },
    {
        "id": "008c6858f232530d",
        "type": "json",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1170,
        "y": 780,
        "wires": [
            [
                "615f843e2eeca331"
            ]
        ]
    },
    {
        "id": "615f843e2eeca331",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "format json",
        "func": "// format time\nconst feeds = msg.payload.feeds\nconst res = []\nfor (let i = 0; i < feeds.length; ++i) {\n  const date = new Date(feeds[i].created_at);\n  const formattedDate = `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n  \n  res[i] = {\n    \"timestamp\": formattedDate,\n    \"action\": feeds[i].field2,\n  }\n}\nmsg.payload = res\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 820,
        "wires": [
            [
                "3ab01693da032eeb"
            ]
        ]
    },
    {
        "id": "1d3426b3f513d23f",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2622714/fields/1.json?api_key=ZBTV7AF559WPETU0&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1370,
        "y": 1360,
        "wires": [
            [
                "efe454c1ea64c915"
            ]
        ]
    },
    {
        "id": "ce1ae7a671d9438b",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "send temperature to cloud",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=VEA6S3YIJ020J415&field1={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "5f951a101cc75ce5",
        "type": "inject",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "read temperature from cloud every 15 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 1360,
        "wires": [
            [
                "1d3426b3f513d23f"
            ]
        ]
    },
    {
        "id": "25d2c8a76441a484",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "average of 10 nearest temp",
        "func": "var feeds = msg.payload.feeds\nvar res = 0\nfor (let i = 0; i < feeds.length; ++i) {\n    res += parseInt(feeds[i].field1)\n}\nmsg.payload = res / feeds.length\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1280,
        "wires": [
            [
                "e8a4c912980bc9b3"
            ]
        ]
    },
    {
        "id": "e8a4c912980bc9b3",
        "type": "ui_chart",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "average temperature",
        "group": "975a56c88443a6df",
        "order": 1,
        "width": 12,
        "height": 7,
        "label": "Average Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1700,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "efe454c1ea64c915",
        "type": "json",
        "z": "4631a2b59dfd677a",
        "g": "afc07466b4873662",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1510,
        "y": 1360,
        "wires": [
            [
                "25d2c8a76441a484"
            ]
        ]
    },
    {
        "id": "f899f4bc64d4a0d4",
        "type": "ui_ui_control",
        "z": "4631a2b59dfd677a",
        "name": "",
        "events": "all",
        "x": 1320,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "5537a84ab728e24e",
        "type": "ui_button",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "",
        "group": "242bb5e8cc6e236f",
        "order": 7,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "log out",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 750,
        "y": 60,
        "wires": [
            [
                "4cf4e1b8658d5680"
            ]
        ]
    },
    {
        "id": "4cf4e1b8658d5680",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Log in\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 60,
        "wires": [
            [
                "f899f4bc64d4a0d4"
            ]
        ]
    },
    {
        "id": "86436bcae18f2467",
        "type": "ui_form",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "login",
        "label": "",
        "group": "a41ff99becdf55cd",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "x": 90,
        "y": 160,
        "wires": [
            [
                "01a86b338ceef7b9",
                "f89fa194367eb61d"
            ]
        ]
    },
    {
        "id": "7ba9eca6a52e12d2",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "check login",
        "func": "var success = {};\nvar fail = {};\n\nif (msg.payload.success == true) {\n    success.topic = \"Login success!\"\n    success.payload = \"Welcome.\";\n    return [success, null];\n}\nelse {\n    fail.topic = \"Login fail!\"\n    fail.payload = `${msg.payload.message}`;\n    return [null, fail];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 200,
        "wires": [
            [
                "122f082ca2f55c50",
                "208a0c06d39b24f4"
            ],
            [
                "122f082ca2f55c50"
            ]
        ]
    },
    {
        "id": "122f082ca2f55c50",
        "type": "ui_toast",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1080,
        "y": 120,
        "wires": []
    },
    {
        "id": "208a0c06d39b24f4",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "Show Dashboard",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 260,
        "wires": [
            [
                "f899f4bc64d4a0d4"
            ]
        ]
    },
    {
        "id": "78a58bbbc2900563",
        "type": "ui_button",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "",
        "group": "a41ff99becdf55cd",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Register",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "b529c1f1ba439492"
            ]
        ]
    },
    {
        "id": "b529c1f1ba439492",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Register\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 80,
        "wires": [
            [
                "f899f4bc64d4a0d4"
            ]
        ]
    },
    {
        "id": "01a86b338ceef7b9",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2632445/feeds.json?api_key=JA8MVJK4ELKLCWMX",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 150,
        "y": 280,
        "wires": [
            [
                "e88fa1a3abaeaf51"
            ]
        ]
    },
    {
        "id": "e88fa1a3abaeaf51",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "Database Account",
        "func": "msg.topic = \"databaseAccounts\"\nmsg.payload = {databaseAccount: msg.payload}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            [
                "2a8d10927e1a2074"
            ]
        ]
    },
    {
        "id": "f89fa194367eb61d",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "Enter Account",
        "func": "msg.topic = \"enteredAccount\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 160,
        "wires": [
            [
                "2a8d10927e1a2074"
            ]
        ]
    },
    {
        "id": "2a8d10927e1a2074",
        "type": "join",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "f5cfc54209ccede2"
            ]
        ]
    },
    {
        "id": "f5cfc54209ccede2",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "04c020d95a5805d8",
        "name": "Check Database",
        "func": "let accountUsername = msg.payload.enteredAccount.username; \nlet accountPassword = msg.payload.enteredAccount.password; \n\nlet databaseAccount = JSON.stringify(msg.payload.databaseAccounts, null, 4);\n\nlet usernameSearchString = `\\\\\"field1\\\\\":\\\\\"${accountUsername}\\\\\"`;\nlet usernameIndex = databaseAccount.indexOf(usernameSearchString);\n\nif (usernameIndex !== -1) {\n    let passwordSearchString = `\\\\\"field2\\\\\":\\\\\"`;\n    let passwordStartIndex = databaseAccount.indexOf(passwordSearchString, usernameIndex);\n    // msg.payload = passwordSearchString;\n    // return msg;\n    let validPassword = false;\n    if (passwordStartIndex !== -1) {\n        let passwordEndIndex = databaseAccount.indexOf('\\\\\"', passwordStartIndex + passwordSearchString.length);\n        let extractedPassword = databaseAccount.substring(passwordStartIndex + passwordSearchString.length, passwordEndIndex);\n        // msg.payload = extractedPassword;\n        // return msg;\n        if (extractedPassword === accountPassword) {\n            validPassword = true;\n            msg.payload = { success: true, message: \"Login successful\" };\n        }\n    }\n    if (!validPassword) {\n        msg.payload = { success: false, message: \"Incorrect password\" };\n    }\n} else {\n    msg.payload = { success: false, message: \"Username not found\" };\n}\n// msg.payload = accountPassword;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 200,
        "wires": [
            [
                "7ba9eca6a52e12d2"
            ]
        ]
    },
    {
        "id": "a6cf0a4d09f0db14",
        "type": "ui_form",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "Register",
        "label": "",
        "group": "0c9715f080d9707a",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "x": 100,
        "y": 460,
        "wires": [
            [
                "23d631cfe477f569",
                "51ae6ee0f02bdc03"
            ]
        ]
    },
    {
        "id": "51ae6ee0f02bdc03",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "Enter Account",
        "func": "msg.topic = \"enteredAccount\";\nlet account_name = msg.payload.username;\nlet account_password = msg.payload.password;\nmsg.payload = {username: account_name, password: account_password};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 480,
        "wires": [
            [
                "023f8cbb33d7f08a"
            ]
        ]
    },
    {
        "id": "b8489eb530e9320a",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=LFALQA4G99WYARPO&field1={{payload.username}}&field2={{payload.password}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "23d631cfe477f569",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2632445/feeds.json?api_key=JA8MVJK4ELKLCWMX&results=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 400,
        "wires": [
            [
                "eef60defbf35577e"
            ]
        ]
    },
    {
        "id": "eef60defbf35577e",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "Database Account",
        "func": "msg.topic = \"databaseAccounts\"\nmsg.payload = {databaseAccount: msg.payload};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "023f8cbb33d7f08a"
            ]
        ]
    },
    {
        "id": "023f8cbb33d7f08a",
        "type": "join",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 420,
        "wires": [
            [
                "c60dada5f99ce185"
            ]
        ]
    },
    {
        "id": "c60dada5f99ce185",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "Check Existed",
        "func": "let enteredAccountUsername = msg.payload.enteredAccount.username;\nlet enteredAccountPassword = msg.payload.enteredAccount.password;\nlet databaseAccounts = JSON.stringify(msg.payload.databaseAccounts, null, 4);\nlet resultString = `\\\\\"field1\\\\\":\\\\\"${enteredAccountUsername}\\\\\"`;\nif (databaseAccounts.includes(resultString)) {\n    msg.payload = { status: false, username: enteredAccountUsername, password: enteredAccountPassword, message: \"This username already exists\" };\n} else {\n    msg.payload = { status: true, username: enteredAccountUsername, password: enteredAccountPassword, message: \"Account added\" };}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 560,
        "wires": [
            [
                "94b4f41fa6b3968b"
            ]
        ]
    },
    {
        "id": "94b4f41fa6b3968b",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "1170b0f0bb7add05",
                "b8489eb530e9320a"
            ],
            [
                "a61acaac53031d76"
            ]
        ]
    },
    {
        "id": "1170b0f0bb7add05",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "Success",
        "func": "msg.topic = \"Success\"\nmsg.payload = `${msg.payload.message}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "f24cf0b58bf6ab7f",
                "c7ff95bc744a22ee"
            ]
        ]
    },
    {
        "id": "a61acaac53031d76",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "Fail",
        "func": "msg.topic = \"Fail\"\nmsg.payload = `${msg.payload.message}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 560,
        "wires": [
            [
                "5450304bbd92ef6d"
            ]
        ]
    },
    {
        "id": "5450304bbd92ef6d",
        "type": "ui_toast",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1290,
        "y": 560,
        "wires": []
    },
    {
        "id": "f24cf0b58bf6ab7f",
        "type": "ui_toast",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1320,
        "y": 440,
        "wires": []
    },
    {
        "id": "2f052e2bedaf1d29",
        "type": "ui_button",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "",
        "group": "0c9715f080d9707a",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "ded7db464c40a35e"
            ]
        ]
    },
    {
        "id": "ded7db464c40a35e",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Log in\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 540,
        "wires": [
            [
                "f899f4bc64d4a0d4"
            ]
        ]
    },
    {
        "id": "75e149d83a4a2323",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=NPPQ0GWP92AWFKLR&field1={{payload.email}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "5b415d3a960a726e",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "Check Existed",
        "func": "let enteredEmail = msg.payload.formEmail.formEmail;\nlet resultString = `\\\\\"field1\\\\\":\\\\\"${enteredEmail}\\\\\"`;\nlet emailDatabase = JSON.stringify(msg.payload.databaseEmails, null, 4); \nif (emailDatabase.includes(resultString)) {\n    msg.payload = { status: false, email: enteredEmail, message: \"Email already exists.\" };\n} else {\n    msg.payload = { status: true, email: enteredEmail, message: \"Email added.\" };}\n// msg.payload = emailDatabase.includes(resultString);\n// msg.payload = resultString;\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1860,
        "wires": [
            [
                "c82da687ef5470dc"
            ]
        ]
    },
    {
        "id": "598932cb436af570",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "https://api.thingspeak.com/channels/2622720/feeds.json?api_key=FWIW2JFTHTTADZO1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1760,
        "wires": [
            [
                "98298c34ec0a43af"
            ]
        ]
    },
    {
        "id": "c923d1ac62ada477",
        "type": "join",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 630,
        "y": 1860,
        "wires": [
            [
                "5b415d3a960a726e"
            ]
        ]
    },
    {
        "id": "e2298bfabb5911a6",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "Enter Email",
        "func": "msg.topic = \"formEmail\";\nmsg.payload = { formEmail: msg.payload.email}; // Assuming the form returns the email in `msg.payload`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1880,
        "wires": [
            [
                "c923d1ac62ada477"
            ]
        ]
    },
    {
        "id": "98298c34ec0a43af",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "Database Email",
        "func": "msg.topic = \"databaseEmails\";\nmsg.payload = { databaseEmails: msg.payload }; // Assuming the HTTP request returns the list of emails in `msg.payload`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1800,
        "wires": [
            [
                "c923d1ac62ada477"
            ]
        ]
    },
    {
        "id": "7b30d6d4b2dbdde4",
        "type": "ui_toast",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1250,
        "y": 1900,
        "wires": []
    },
    {
        "id": "c82da687ef5470dc",
        "type": "switch",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1860,
        "wires": [
            [
                "179e9a78e38b463e",
                "75e149d83a4a2323"
            ],
            [
                "c1a0897af2ac3b9b"
            ]
        ]
    },
    {
        "id": "66ea9c2fa47efd20",
        "type": "ui_toast",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1250,
        "y": 1800,
        "wires": []
    },
    {
        "id": "179e9a78e38b463e",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "Success",
        "func": "var success = {};\nsuccess.payload = \"Email added\";\nsuccess.topic = \"Success\"\nreturn success;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1800,
        "wires": [
            [
                "66ea9c2fa47efd20"
            ]
        ]
    },
    {
        "id": "c1a0897af2ac3b9b",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "Fail",
        "func": "var fail = {}\nfail.payload = \"Email already exists\"\nfail.topic = \"Fail\"\n\nreturn fail;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1900,
        "wires": [
            [
                "7b30d6d4b2dbdde4"
            ]
        ]
    },
    {
        "id": "fde39f50bff6157d",
        "type": "ui_form",
        "z": "4631a2b59dfd677a",
        "g": "994e07498d4b9f3e",
        "name": "Add email to receive notification",
        "label": "",
        "group": "242bb5e8cc6e236f",
        "order": 5,
        "width": 7,
        "height": 1,
        "options": [
            {
                "label": "Email",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "email": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 170,
        "y": 1840,
        "wires": [
            [
                "598932cb436af570",
                "e2298bfabb5911a6"
            ]
        ]
    },
    {
        "id": "c7ff95bc744a22ee",
        "type": "change",
        "z": "4631a2b59dfd677a",
        "g": "6109487045531d46",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Log in\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 380,
        "wires": [
            [
                "f899f4bc64d4a0d4"
            ]
        ]
    },
    {
        "id": "252f1d5bae19dca3",
        "type": "inject",
        "z": "4631a2b59dfd677a",
        "g": "eff3ad7f62a75390",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1130,
        "y": 660,
        "wires": [
            [
                "21fd9ad6824ce739"
            ]
        ]
    },
    {
        "id": "3435c25c820d8bad",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "fc9d4bb775c2f470",
        "name": "Sending Email (msg.payload = string message)",
        "func": "msg.topic = \"Message\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 2200,
        "wires": [
            [
                "6a29014a311329aa",
                "bc2f4ec82b42b41a"
            ]
        ]
    },
    {
        "id": "6a29014a311329aa",
        "type": "http request",
        "z": "4631a2b59dfd677a",
        "g": "fc9d4bb775c2f470",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2622720/fields/1.json?api_key=FWIW2JFTHTTADZO1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 2040,
        "wires": [
            [
                "484d82de9eec77f1"
            ]
        ]
    },
    {
        "id": "484d82de9eec77f1",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "fc9d4bb775c2f470",
        "name": "Get Email List",
        "func": "let databaseEmails = JSON.stringify(msg.payload, null, 4);\n// Example string: '\\\\\"field1\\\\\":\\\\\"email1@gmail.com\\\\\",\\\\\"field1\\\\\":\\\\\"email2@gmail.com\\\\\"'\nlet feedsIndex = databaseEmails.indexOf('\\\\\"feeds\\\\\"');\ndatabaseEmails = databaseEmails.substring(feedsIndex);\n// Define an empty array to hold the extracted emails\nlet emailList = [];\n\n// Use a regular expression to match all email addresses\nlet emailRegex = /\\\\\"field1\\\\\":\\\\\"(.*?)\\\\\"/g; // This regex matches anything within the escaped quotes after \"field1\":\n\nlet match;\n\nwhile ((match = emailRegex.exec(databaseEmails)) !== null) {\n    emailList.push(match[1]); // match[1] contains the email address\n}\n\nmsg.payload = emailList;\nmsg.topic = \"List\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 2040,
        "wires": [
            [
                "bc2f4ec82b42b41a"
            ]
        ]
    },
    {
        "id": "136a4eaff7866293",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "fc9d4bb775c2f470",
        "name": "Loop",
        "func": "let emailList = msg.payload;\nif (emailList.length == 0) {\n    return null;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2040,
        "wires": [
            [
                "8409fd046d135e35"
            ]
        ]
    },
    {
        "id": "91b0974e07be2b66",
        "type": "e-mail",
        "z": "4631a2b59dfd677a",
        "g": "fc9d4bb775c2f470",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Send Email",
        "x": 1030,
        "y": 2120,
        "wires": []
    },
    {
        "id": "8409fd046d135e35",
        "type": "function",
        "z": "4631a2b59dfd677a",
        "g": "fc9d4bb775c2f470",
        "name": "User Emails",
        "func": "let emailList = msg.payload.List; // The list of email addresses\nvar email = {}; // Object to store the email properties\nvar list = {}; // Object to store the remaining email list\n\n// Pop the first email from the list\nlet e = emailList.shift();\n\n// Set the 'to' and 'payload' properties for the email\nemail.to = e;\nemail.topic = \"Node-red\"\nemail.payload = msg.payload.Message;\n\n// Set the remaining emails in 'list'\nlist.payload = emailList;\n\n// Return both objects\nreturn [email, list];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2200,
        "wires": [
            [
                "91b0974e07be2b66"
            ],
            [
                "136a4eaff7866293"
            ]
        ]
    },
    {
        "id": "bc2f4ec82b42b41a",
        "type": "join",
        "z": "4631a2b59dfd677a",
        "g": "fc9d4bb775c2f470",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 2200,
        "wires": [
            [
                "8409fd046d135e35",
                "8e8308b77a7ed0a5"
            ]
        ]
    },
    {
        "id": "8e8308b77a7ed0a5",
        "type": "debug",
        "z": "4631a2b59dfd677a",
        "g": "fc9d4bb775c2f470",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 2300,
        "wires": []
    },
    {
        "id": "5d87a35ad3efc8fb",
        "type": "ui_spacer",
        "z": "4631a2b59dfd677a",
        "name": "spacer",
        "group": "a41ff99becdf55cd",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "fbec6d70445ffef0",
        "type": "ui_spacer",
        "z": "4631a2b59dfd677a",
        "name": "spacer",
        "group": "a41ff99becdf55cd",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "a4f15746688b8116",
        "type": "ui_spacer",
        "z": "4631a2b59dfd677a",
        "name": "spacer",
        "group": "242bb5e8cc6e236f",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "cc3a9abe83c90bd8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.21.57.182",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "242bb5e8cc6e236f",
        "type": "ui_group",
        "name": "Switch",
        "tab": "6ba0c56fa3a08f57",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "d1aef56c328c2c49",
        "type": "ui_group",
        "name": "Status",
        "tab": "6ba0c56fa3a08f57",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "975a56c88443a6df",
        "type": "ui_group",
        "name": "Display",
        "tab": "6ba0c56fa3a08f57",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "a41ff99becdf55cd",
        "type": "ui_group",
        "name": "Login",
        "tab": "3ff6f6dc28002473",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "0c9715f080d9707a",
        "type": "ui_group",
        "name": "Register",
        "tab": "499e76dd4fa8167b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6ba0c56fa3a08f57",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "3ff6f6dc28002473",
        "type": "ui_tab",
        "name": "Log in",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "499e76dd4fa8167b",
        "type": "ui_tab",
        "name": "Register",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": true
    }
]