[
    {
        "id": "c68563f010daea6a",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "77866285b2ddd8c5",
        "type": "group",
        "z": "c68563f010daea6a",
        "name": "limit temperature",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "14e1739a649f8d83",
            "c14a4a4dd9a805f6",
            "67dee75bdd43d548",
            "73d739513545ea7f",
            "f04e48480527160b",
            "4d0801c9386df479",
            "3b9e0686f73c47f1",
            "465b745aaab8c6dc",
            "9eec7295c25d99f0",
            "5a7d89e8fec64418",
            "0207558737052e6f",
            "e5a712fb8225e5e7",
            "90a4d0d44deb86f3",
            "7cab3ba3182c1718",
            "59701f5f60a4c0a8"
        ],
        "x": 14,
        "y": 1679,
        "w": 1672,
        "h": 262
    },
    {
        "id": "32e9285e2fa0b826",
        "type": "group",
        "z": "c68563f010daea6a",
        "name": "temperature and humidity",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "e942df2872d79e9f",
            "44f40755e1486d56",
            "e37767b5d8c42f01",
            "f1aa16dce8d99463",
            "b7053a4cc73b9e62",
            "afaa85ee54809ee9",
            "da99ef0721453ada",
            "20928c0a7a931ce5",
            "a41818c33813b5fe",
            "edadf4a04919c602",
            "6b4b4ead21cdaa38",
            "10b73a1bb28a6071",
            "e43b41b4bc1ef8bf",
            "17f022fad99724ab",
            "ac3fbc47365fde08",
            "b67412eef6f7d30a",
            "e27f86448b501f1d",
            "dc510f3abe922365",
            "b53bf0b3a5980691",
            "03989901546716c8",
            "ecaf9e637f62606f",
            "a5cde801cd7e526e"
        ],
        "x": 14,
        "y": 1319,
        "w": 1812,
        "h": 342
    },
    {
        "id": "b07a23ec1bd6e5b5",
        "type": "group",
        "z": "c68563f010daea6a",
        "name": "Door",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "236a8155317d2984",
            "d0069d524aade4e4",
            "0cf0be0b505e6038",
            "02cb07d665f3f380",
            "0be25ae2244a93b6",
            "33e8365e23a3ba75",
            "67bb2a7b066a8263",
            "402c278c0e3309c7",
            "46167b33c0e67aff",
            "634424a13fcea13a",
            "c9ae86feeb9b692f",
            "3481630fb11d2eb8",
            "3ac45ccd85f40bbd",
            "01ca56352d712b4b",
            "3755ecbde7b64be5",
            "c1948c77cd1e7bce",
            "a67591f626b4cd60",
            "125615dce97fee1b",
            "ac18f4a065b50588",
            "a80d1d7375cad5af",
            "1176916103524954",
            "2abc452d94277c39",
            "75d3d32f0e01ed92"
        ],
        "x": 14,
        "y": 619,
        "w": 1432,
        "h": 422
    },
    {
        "id": "a0f9646c87735f02",
        "type": "group",
        "z": "c68563f010daea6a",
        "name": "Login Page",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "53494a6f6682cdc1",
            "cf8f269a012f21b1",
            "f8d938c464028b7a",
            "a1c1f3938be33476",
            "57526474848170da",
            "fae704be4b9762a8",
            "d71454bd4d06a55a",
            "f470f5bb67a94190",
            "68c1d42e20e79817",
            "16191bb29eecdef1",
            "2e07c827119b7b8e",
            "eedb471746eb23ee",
            "57f857198b612e63"
        ],
        "x": 14,
        "y": 19,
        "w": 1252,
        "h": 302
    },
    {
        "id": "ca41d32fdb39d00a",
        "type": "group",
        "z": "c68563f010daea6a",
        "name": "Register Page",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "e7a2363b916bfe3f",
            "747061c98dd9d4e3",
            "c9b67c1366bfd142",
            "b4a1418641145760",
            "48d7c2e9332e9833",
            "5117be43b22ea4f7",
            "6e93bc1f631046e5",
            "b0b7c1acd25a673e",
            "2bbec5877503a6cf",
            "d4e9ba763d0592dc",
            "d88a9ddb3153d7c0",
            "a96d13773782f2a7",
            "88fd608f60ea0548",
            "78c0231ba71c8258",
            "7ac938c605cb2214"
        ],
        "x": 14,
        "y": 339,
        "w": 1412,
        "h": 262
    },
    {
        "id": "bf6e921c7de48a87",
        "type": "group",
        "z": "c68563f010daea6a",
        "name": "Email subscription",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "7508592d02793b01",
            "71f3e9cd1032dc88",
            "ea0fef03917375ca",
            "9138e041edad6345",
            "1caa511779264a3b",
            "a889a890ab301fd1",
            "1eb0a4ce1a46c21a",
            "a4923148e02fe9ca",
            "2520867711f7e8ad",
            "0cf732d6ee7ec6c9",
            "20e173fbd2bf9ab8",
            "50acca37cac2a048"
        ],
        "x": 14,
        "y": 1959,
        "w": 1342,
        "h": 242
    },
    {
        "id": "a81bdc89d7d05b5f",
        "type": "group",
        "z": "c68563f010daea6a",
        "name": "Send Email",
        "style": {
            "label": true,
            "color": "#ff0000"
        },
        "nodes": [
            "d2c5e880e2c1d4cb",
            "62e2f6c172f9c40f",
            "cc85758536fe0394",
            "ad6140198b29e5ed",
            "ce88d448e39cc072",
            "5f5ea9a116ca3cda",
            "dffa474c79b55907"
        ],
        "x": 14,
        "y": 1059,
        "w": 1112,
        "h": 242
    },
    {
        "id": "e942df2872d79e9f",
        "type": "mqtt in",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "topic": "/group_21/local/temperature/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e1c237fbdd38aad5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 1520,
        "wires": [
            [
                "e37767b5d8c42f01",
                "b7053a4cc73b9e62",
                "20928c0a7a931ce5",
                "dc510f3abe922365"
            ]
        ]
    },
    {
        "id": "44f40755e1486d56",
        "type": "mqtt in",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "topic": "/group_21/local/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e1c237fbdd38aad5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1420,
        "wires": [
            [
                "f1aa16dce8d99463"
            ]
        ]
    },
    {
        "id": "14e1739a649f8d83",
        "type": "ui_slider",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "Lower Bound Temperature",
        "label": "Lower Bound",
        "tooltip": "",
        "group": "242bb5e8cc6e236f",
        "order": 4,
        "width": 7,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-40",
        "max": "80",
        "step": 1,
        "x": 760,
        "y": 1780,
        "wires": [
            [
                "465b745aaab8c6dc"
            ]
        ]
    },
    {
        "id": "c14a4a4dd9a805f6",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "store lower temp",
        "rules": [
            {
                "t": "set",
                "p": "lowerTemp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "x": 1320,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "67dee75bdd43d548",
        "type": "ui_slider",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "Upper Bound Temperature",
        "label": "Upper Bound",
        "tooltip": "",
        "group": "242bb5e8cc6e236f",
        "order": 3,
        "width": 7,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": "-40",
        "max": "80",
        "step": 1,
        "x": 760,
        "y": 1880,
        "wires": [
            [
                "9eec7295c25d99f0"
            ]
        ]
    },
    {
        "id": "73d739513545ea7f",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "store upper temp",
        "rules": [
            {
                "t": "set",
                "p": "upperTemp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "x": 1330,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "f04e48480527160b",
        "type": "ui_text",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "group": "242bb5e8cc6e236f",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Adjust warning Temperature",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 640,
        "y": 1720,
        "wires": []
    },
    {
        "id": "236a8155317d2984",
        "type": "mqtt in",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "topic": "/group_21/local/door_unlock",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e1c237fbdd38aad5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 860,
        "wires": [
            [
                "02cb07d665f3f380"
            ]
        ]
    },
    {
        "id": "d0069d524aade4e4",
        "type": "mqtt in",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "topic": "/group_21/local/door_lock",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e1c237fbdd38aad5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "0cf0be0b505e6038"
            ]
        ]
    },
    {
        "id": "0cf0be0b505e6038",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "close door successfully",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "close successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "402c278c0e3309c7",
                "125615dce97fee1b"
            ]
        ]
    },
    {
        "id": "02cb07d665f3f380",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 860,
        "wires": [
            [
                "67bb2a7b066a8263"
            ],
            [
                "c1948c77cd1e7bce"
            ]
        ]
    },
    {
        "id": "0be25ae2244a93b6",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "send warning security to user",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pushsafer.com/api?k=reEGV3kYmW6aoEuJp7Dk&m={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 980,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "33e8365e23a3ba75",
        "type": "ui_text",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "group": "d1aef56c328c2c49",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Door status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1170,
        "y": 880,
        "wires": []
    },
    {
        "id": "67bb2a7b066a8263",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "open door successfully",
        "rules": [
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "open",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "open successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 840,
        "wires": [
            [
                "33e8365e23a3ba75",
                "125615dce97fee1b"
            ]
        ]
    },
    {
        "id": "402c278c0e3309c7",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "close",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1000,
        "wires": [
            [
                "33e8365e23a3ba75"
            ]
        ]
    },
    {
        "id": "e37767b5d8c42f01",
        "type": "ui_gauge",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "group": "d1aef56c328c2c49",
        "order": 3,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Temperature",
        "label": "",
        "format": "{{value}}°C",
        "min": "-40",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 830,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f1aa16dce8d99463",
        "type": "ui_gauge",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "group": "d1aef56c328c2c49",
        "order": 4,
        "width": 6,
        "height": 5,
        "gtype": "wave",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 440,
        "y": 1420,
        "wires": []
    },
    {
        "id": "b7053a4cc73b9e62",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "check temp corresponding to temp status",
        "func": "var lowerTemp = flow.get('lowerTemp')\nvar upperTemp = flow.get('upperTemp')\nif (msg.payload > upperTemp) {\n    msg.payload = \"High\"\n} else if (lowerTemp <= msg.payload && msg.payload <= upperTemp) {\n    msg.payload = \"Normal\"\n    flow.set(\"alreadySentHigh\", false)\n    flow.set(\"alreadySentLow\", false)\n} else {\n    msg.payload = \"Low\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1580,
        "wires": [
            [
                "afaa85ee54809ee9"
            ]
        ]
    },
    {
        "id": "afaa85ee54809ee9",
        "type": "ui_text",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "group": "d1aef56c328c2c49",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Temperature status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1070,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4d0801c9386df479",
        "type": "mqtt in",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "",
        "topic": "/group_21/local/temperature/upper_bound",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e1c237fbdd38aad5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 1880,
        "wires": [
            [
                "7cab3ba3182c1718"
            ]
        ]
    },
    {
        "id": "3b9e0686f73c47f1",
        "type": "mqtt in",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "",
        "topic": "/group_21/local/temperature/lower_bound",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e1c237fbdd38aad5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "59701f5f60a4c0a8"
            ]
        ]
    },
    {
        "id": "46167b33c0e67aff",
        "type": "mqtt out",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "topic": "/group_21/web/door",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e1c237fbdd38aad5",
        "x": 920,
        "y": 660,
        "wires": []
    },
    {
        "id": "465b745aaab8c6dc",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "check temperature limit condition",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "upperTemp",
                "vt": "flow"
            },
            {
                "t": "gte",
                "v": "upperTemp",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1780,
        "wires": [
            [
                "c14a4a4dd9a805f6"
            ],
            [
                "90a4d0d44deb86f3"
            ]
        ]
    },
    {
        "id": "9eec7295c25d99f0",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "check temperature limit condition",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "lowerTemp",
                "vt": "flow"
            },
            {
                "t": "lte",
                "v": "lowerTemp",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1880,
        "wires": [
            [
                "73d739513545ea7f"
            ],
            [
                "e5a712fb8225e5e7"
            ]
        ]
    },
    {
        "id": "5a7d89e8fec64418",
        "type": "ui_toast",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1580,
        "y": 1800,
        "wires": []
    },
    {
        "id": "0207558737052e6f",
        "type": "ui_toast",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1580,
        "y": 1900,
        "wires": []
    },
    {
        "id": "e5a712fb8225e5e7",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The upper limit temperature must be greater than the lower limit temperature.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1900,
        "wires": [
            [
                "0207558737052e6f"
            ]
        ]
    },
    {
        "id": "90a4d0d44deb86f3",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The lower limit temperature must be less than the upper limit temperature.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1800,
        "wires": [
            [
                "5a7d89e8fec64418"
            ]
        ]
    },
    {
        "id": "7cab3ba3182c1718",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "set default temp limit",
        "func": "if (flow.get('upperTemp') == undefined) {\n    flow.set('upperTemp', msg.payload)\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1880,
        "wires": [
            [
                "67dee75bdd43d548"
            ]
        ]
    },
    {
        "id": "59701f5f60a4c0a8",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "77866285b2ddd8c5",
        "name": "set default temp limit",
        "func": "if (flow.get('lowerTemp') == undefined) {\n    flow.set('lowerTemp', msg.payload)\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1780,
        "wires": [
            [
                "14e1739a649f8d83"
            ]
        ]
    },
    {
        "id": "634424a13fcea13a",
        "type": "ui_button",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "group": "242bb5e8cc6e236f",
        "order": 1,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "open/close Door",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 800,
        "wires": [
            [
                "c9ae86feeb9b692f"
            ]
        ]
    },
    {
        "id": "c9ae86feeb9b692f",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "property": "status",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "open",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "close",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 740,
        "wires": [
            [
                "3481630fb11d2eb8"
            ],
            [
                "3ac45ccd85f40bbd"
            ]
        ]
    },
    {
        "id": "3481630fb11d2eb8",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "open->close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "close",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "close successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 680,
        "wires": [
            [
                "46167b33c0e67aff",
                "01ca56352d712b4b",
                "125615dce97fee1b"
            ]
        ]
    },
    {
        "id": "3ac45ccd85f40bbd",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "close->open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "status",
                "pt": "flow",
                "to": "open",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "open successfully",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "46167b33c0e67aff",
                "3755ecbde7b64be5",
                "125615dce97fee1b"
            ]
        ]
    },
    {
        "id": "01ca56352d712b4b",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 720,
        "wires": [
            [
                "33e8365e23a3ba75"
            ]
        ]
    },
    {
        "id": "3755ecbde7b64be5",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 760,
        "wires": [
            [
                "33e8365e23a3ba75"
            ]
        ]
    },
    {
        "id": "da99ef0721453ada",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "send warning temperature to user",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pushsafer.com/api?k=reEGV3kYmW6aoEuJp7Dk&m={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1340,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "20928c0a7a931ce5",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "upperTemp",
                "vt": "flow"
            },
            {
                "t": "lt",
                "v": "lowerTemp",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 1440,
        "wires": [
            [
                "e43b41b4bc1ef8bf"
            ],
            [
                "ac3fbc47365fde08"
            ]
        ]
    },
    {
        "id": "a41818c33813b5fe",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The temperature in the house is very high !!!, there may be a fire",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "da99ef0721453ada",
                "d2c5e880e2c1d4cb"
            ]
        ]
    },
    {
        "id": "edadf4a04919c602",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The temperature in the house is very low!!!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1460,
        "wires": [
            [
                "da99ef0721453ada",
                "d2c5e880e2c1d4cb"
            ]
        ]
    },
    {
        "id": "c1948c77cd1e7bce",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "open door fail",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "someone is trying to sneak into the house",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "door",
                "pt": "flow",
                "to": "open fail",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 900,
        "wires": [
            [
                "0be25ae2244a93b6",
                "125615dce97fee1b",
                "d2c5e880e2c1d4cb"
            ]
        ]
    },
    {
        "id": "6b4b4ead21cdaa38",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "create variable flow.alreadySentLow",
        "rules": [
            {
                "t": "set",
                "p": "alreadySentLow",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "10b73a1bb28a6071",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alreadySentHigh",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "e43b41b4bc1ef8bf",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "property": "alreadySentHigh",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "a41818c33813b5fe",
                "10b73a1bb28a6071"
            ]
        ]
    },
    {
        "id": "17f022fad99724ab",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "create variable flow.alreadySentHigh",
        "rules": [
            {
                "t": "set",
                "p": "alreadySentHigh",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "ac3fbc47365fde08",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "property": "alreadySentLow",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 1480,
        "wires": [
            [
                "edadf4a04919c602",
                "b67412eef6f7d30a"
            ]
        ]
    },
    {
        "id": "b67412eef6f7d30a",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alreadySentLow",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "a67591f626b4cd60",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "door status to cloud",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=VEA6S3YIJ020J415&field2={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1110,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "125615dce97fee1b",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "door",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 900,
        "wires": [
            [
                "a67591f626b4cd60"
            ]
        ]
    },
    {
        "id": "ac18f4a065b50588",
        "type": "ui_table",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "group": "975a56c88443a6df",
        "name": "History",
        "order": 2,
        "width": 12,
        "height": 4,
        "columns": [
            {
                "field": "",
                "title": "",
                "width": "10%",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "action",
                "title": "Action",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1360,
        "y": 880,
        "wires": []
    },
    {
        "id": "a80d1d7375cad5af",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "read door status from cloud",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2622714/fields/2.json?api_key=ZBTV7AF559WPETU0&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1280,
        "y": 720,
        "wires": [
            [
                "1176916103524954"
            ]
        ]
    },
    {
        "id": "1176916103524954",
        "type": "json",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1170,
        "y": 780,
        "wires": [
            [
                "2abc452d94277c39"
            ]
        ]
    },
    {
        "id": "2abc452d94277c39",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "format json",
        "func": "// format time\nconst feeds = msg.payload.feeds\nconst res = []\nfor (let i = 0; i < feeds.length; ++i) {\n  if (feeds[i].field2 == null) {\n    continue\n  }\n  const date = new Date(feeds[i].created_at);\n  const formattedDate = `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n  \n  res[i] = {\n    \"timestamp\": formattedDate,\n    \"action\": feeds[i].field2,\n  }\n}\nmsg.payload = res\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 820,
        "wires": [
            [
                "ac18f4a065b50588"
            ]
        ]
    },
    {
        "id": "e27f86448b501f1d",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2622714/fields/1.json?api_key=ZBTV7AF559WPETU0&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1370,
        "y": 1620,
        "wires": [
            [
                "03989901546716c8"
            ]
        ]
    },
    {
        "id": "dc510f3abe922365",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "send temperature to cloud",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=VEA6S3YIJ020J415&field1={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "b53bf0b3a5980691",
        "type": "inject",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "read temperature from cloud every 15 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 1620,
        "wires": [
            [
                "e27f86448b501f1d"
            ]
        ]
    },
    {
        "id": "ecaf9e637f62606f",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "average of 10 nearest temp",
        "func": "var feeds = msg.payload.feeds\nvar res = 0\nvar null_val = 0\nfor (let i = 0; i < feeds.length; ++i) {\n    if (feeds[i].field1 == null) {\n        ++null_val;\n        continue\n    }\n    res += parseInt(feeds[i].field1)\n}\nmsg.payload = res / (feeds.length - null_val)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1540,
        "wires": [
            [
                "a5cde801cd7e526e"
            ]
        ]
    },
    {
        "id": "a5cde801cd7e526e",
        "type": "ui_chart",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "average temperature",
        "group": "975a56c88443a6df",
        "order": 1,
        "width": 12,
        "height": 7,
        "label": "Average Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1700,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "03989901546716c8",
        "type": "json",
        "z": "c68563f010daea6a",
        "g": "32e9285e2fa0b826",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1510,
        "y": 1620,
        "wires": [
            [
                "ecaf9e637f62606f"
            ]
        ]
    },
    {
        "id": "240704a3466822c8",
        "type": "ui_ui_control",
        "z": "c68563f010daea6a",
        "name": "",
        "events": "all",
        "x": 1320,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "eedb471746eb23ee",
        "type": "ui_button",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "",
        "group": "242bb5e8cc6e236f",
        "order": 7,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "log out",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 750,
        "y": 60,
        "wires": [
            [
                "57f857198b612e63"
            ]
        ]
    },
    {
        "id": "57f857198b612e63",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Log in\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 60,
        "wires": [
            [
                "240704a3466822c8"
            ]
        ]
    },
    {
        "id": "53494a6f6682cdc1",
        "type": "ui_form",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "login",
        "label": "",
        "group": "a41ff99becdf55cd",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "x": 90,
        "y": 160,
        "wires": [
            [
                "d71454bd4d06a55a",
                "68c1d42e20e79817"
            ]
        ]
    },
    {
        "id": "cf8f269a012f21b1",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "check login",
        "func": "var success = {};\nvar fail = {};\n\nif (msg.payload.success == true) {\n    success.topic = \"Login success!\"\n    success.payload = \"Welcome.\";\n    return [success, null];\n}\nelse {\n    fail.topic = \"Login fail!\"\n    fail.payload = `${msg.payload.message}`;\n    return [null, fail];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 200,
        "wires": [
            [
                "f8d938c464028b7a",
                "a1c1f3938be33476"
            ],
            [
                "f8d938c464028b7a"
            ]
        ]
    },
    {
        "id": "f8d938c464028b7a",
        "type": "ui_toast",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1080,
        "y": 120,
        "wires": []
    },
    {
        "id": "a1c1f3938be33476",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "Show Dashboard",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Dashboard\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 260,
        "wires": [
            [
                "240704a3466822c8"
            ]
        ]
    },
    {
        "id": "57526474848170da",
        "type": "ui_button",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "",
        "group": "a41ff99becdf55cd",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Register",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "fae704be4b9762a8"
            ]
        ]
    },
    {
        "id": "fae704be4b9762a8",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Register\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 80,
        "wires": [
            [
                "240704a3466822c8"
            ]
        ]
    },
    {
        "id": "d71454bd4d06a55a",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2632445/feeds.json?api_key=JA8MVJK4ELKLCWMX",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 150,
        "y": 280,
        "wires": [
            [
                "f470f5bb67a94190"
            ]
        ]
    },
    {
        "id": "f470f5bb67a94190",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "Database Account",
        "func": "msg.topic = \"databaseAccounts\"\nmsg.payload = {databaseAccount: msg.payload}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            [
                "16191bb29eecdef1"
            ]
        ]
    },
    {
        "id": "68c1d42e20e79817",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "Enter Account",
        "func": "msg.topic = \"enteredAccount\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 160,
        "wires": [
            [
                "16191bb29eecdef1"
            ]
        ]
    },
    {
        "id": "16191bb29eecdef1",
        "type": "join",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "2e07c827119b7b8e"
            ]
        ]
    },
    {
        "id": "2e07c827119b7b8e",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "a0f9646c87735f02",
        "name": "Check Database",
        "func": "let accountUsername = msg.payload.enteredAccount.username; \nlet accountPassword = msg.payload.enteredAccount.password; \n\nlet databaseAccount = JSON.stringify(msg.payload.databaseAccounts, null, 4);\n\nlet usernameSearchString = `\\\\\"field1\\\\\":\\\\\"${accountUsername}\\\\\"`;\nlet usernameIndex = databaseAccount.indexOf(usernameSearchString);\n\nif (usernameIndex !== -1) {\n    let passwordSearchString = `\\\\\"field2\\\\\":\\\\\"`;\n    let passwordStartIndex = databaseAccount.indexOf(passwordSearchString, usernameIndex);\n    // msg.payload = passwordSearchString;\n    // return msg;\n    let validPassword = false;\n    if (passwordStartIndex !== -1) {\n        let passwordEndIndex = databaseAccount.indexOf('\\\\\"', passwordStartIndex + passwordSearchString.length);\n        let extractedPassword = databaseAccount.substring(passwordStartIndex + passwordSearchString.length, passwordEndIndex);\n        // msg.payload = extractedPassword;\n        // return msg;\n        if (extractedPassword === accountPassword) {\n            validPassword = true;\n            msg.payload = { success: true, message: \"Login successful\" };\n        }\n    }\n    if (!validPassword) {\n        msg.payload = { success: false, message: \"Incorrect password\" };\n    }\n} else {\n    msg.payload = { success: false, message: \"Username not found\" };\n}\n// msg.payload = accountPassword;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 200,
        "wires": [
            [
                "cf8f269a012f21b1"
            ]
        ]
    },
    {
        "id": "e7a2363b916bfe3f",
        "type": "ui_form",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "Register",
        "label": "",
        "group": "0c9715f080d9707a",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "x": 100,
        "y": 460,
        "wires": [
            [
                "b4a1418641145760",
                "747061c98dd9d4e3"
            ]
        ]
    },
    {
        "id": "747061c98dd9d4e3",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "Enter Account",
        "func": "msg.topic = \"enteredAccount\";\nlet account_name = msg.payload.username;\nlet account_password = msg.payload.password;\nmsg.payload = {username: account_name, password: account_password};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 480,
        "wires": [
            [
                "5117be43b22ea4f7"
            ]
        ]
    },
    {
        "id": "c9b67c1366bfd142",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=LFALQA4G99WYARPO&field1={{payload.username}}&field2={{payload.password}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b4a1418641145760",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2632445/feeds.json?api_key=JA8MVJK4ELKLCWMX&results=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 400,
        "wires": [
            [
                "48d7c2e9332e9833"
            ]
        ]
    },
    {
        "id": "48d7c2e9332e9833",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "Database Account",
        "func": "msg.topic = \"databaseAccounts\"\nmsg.payload = {databaseAccount: msg.payload};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "5117be43b22ea4f7"
            ]
        ]
    },
    {
        "id": "5117be43b22ea4f7",
        "type": "join",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 420,
        "wires": [
            [
                "6e93bc1f631046e5"
            ]
        ]
    },
    {
        "id": "6e93bc1f631046e5",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "Check Existed",
        "func": "let enteredAccountUsername = msg.payload.enteredAccount.username;\nlet enteredAccountPassword = msg.payload.enteredAccount.password;\nlet databaseAccounts = JSON.stringify(msg.payload.databaseAccounts, null, 4);\nlet resultString = `\\\\\"field1\\\\\":\\\\\"${enteredAccountUsername}\\\\\"`;\nif (databaseAccounts.includes(resultString)) {\n    msg.payload = { status: false, username: enteredAccountUsername, password: enteredAccountPassword, message: \"This username already exists\" };\n} else {\n    msg.payload = { status: true, username: enteredAccountUsername, password: enteredAccountPassword, message: \"Account added\" };}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 560,
        "wires": [
            [
                "b0b7c1acd25a673e"
            ]
        ]
    },
    {
        "id": "b0b7c1acd25a673e",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 480,
        "wires": [
            [
                "2bbec5877503a6cf",
                "c9b67c1366bfd142"
            ],
            [
                "d4e9ba763d0592dc"
            ]
        ]
    },
    {
        "id": "2bbec5877503a6cf",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "Success",
        "func": "msg.topic = \"Success\"\nmsg.payload = `${msg.payload.message}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "a96d13773782f2a7",
                "7ac938c605cb2214"
            ]
        ]
    },
    {
        "id": "d4e9ba763d0592dc",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "Fail",
        "func": "msg.topic = \"Fail\"\nmsg.payload = `${msg.payload.message}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 560,
        "wires": [
            [
                "d88a9ddb3153d7c0"
            ]
        ]
    },
    {
        "id": "d88a9ddb3153d7c0",
        "type": "ui_toast",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1290,
        "y": 560,
        "wires": []
    },
    {
        "id": "a96d13773782f2a7",
        "type": "ui_toast",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1320,
        "y": 440,
        "wires": []
    },
    {
        "id": "88fd608f60ea0548",
        "type": "ui_button",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "",
        "group": "0c9715f080d9707a",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "78c0231ba71c8258"
            ]
        ]
    },
    {
        "id": "78c0231ba71c8258",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Log in\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 540,
        "wires": [
            [
                "240704a3466822c8"
            ]
        ]
    },
    {
        "id": "7508592d02793b01",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=NPPQ0GWP92AWFKLR&field1={{payload.email}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "71f3e9cd1032dc88",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "Check Existed",
        "func": "let enteredEmail = msg.payload.formEmail.formEmail;\nlet resultString = `\\\\\"field1\\\\\":\\\\\"${enteredEmail}\\\\\"`;\nlet emailDatabase = JSON.stringify(msg.payload.databaseEmails, null, 4); \nif (emailDatabase.includes(resultString)) {\n    msg.payload = { status: false, email: enteredEmail, message: \"Email already exists.\" };\n} else {\n    msg.payload = { status: true, email: enteredEmail, message: \"Email added.\" };}\n// msg.payload = emailDatabase.includes(resultString);\n// msg.payload = resultString;\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2120,
        "wires": [
            [
                "a4923148e02fe9ca"
            ]
        ]
    },
    {
        "id": "ea0fef03917375ca",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "https://api.thingspeak.com/channels/2622720/feeds.json?api_key=FWIW2JFTHTTADZO1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 2020,
        "wires": [
            [
                "a889a890ab301fd1"
            ]
        ]
    },
    {
        "id": "9138e041edad6345",
        "type": "join",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 630,
        "y": 2120,
        "wires": [
            [
                "71f3e9cd1032dc88"
            ]
        ]
    },
    {
        "id": "1caa511779264a3b",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "Enter Email",
        "func": "msg.topic = \"formEmail\";\nmsg.payload = { formEmail: msg.payload.email}; // Assuming the form returns the email in `msg.payload`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2140,
        "wires": [
            [
                "9138e041edad6345"
            ]
        ]
    },
    {
        "id": "a889a890ab301fd1",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "Database Email",
        "func": "msg.topic = \"databaseEmails\";\nmsg.payload = { databaseEmails: msg.payload }; // Assuming the HTTP request returns the list of emails in `msg.payload`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2060,
        "wires": [
            [
                "9138e041edad6345"
            ]
        ]
    },
    {
        "id": "1eb0a4ce1a46c21a",
        "type": "ui_toast",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1250,
        "y": 2160,
        "wires": []
    },
    {
        "id": "a4923148e02fe9ca",
        "type": "switch",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 2120,
        "wires": [
            [
                "0cf732d6ee7ec6c9",
                "7508592d02793b01"
            ],
            [
                "20e173fbd2bf9ab8"
            ]
        ]
    },
    {
        "id": "2520867711f7e8ad",
        "type": "ui_toast",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1250,
        "y": 2060,
        "wires": []
    },
    {
        "id": "0cf732d6ee7ec6c9",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "Success",
        "func": "var success = {};\nsuccess.payload = \"Email added\";\nsuccess.topic = \"Success\"\nreturn success;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 2060,
        "wires": [
            [
                "2520867711f7e8ad"
            ]
        ]
    },
    {
        "id": "20e173fbd2bf9ab8",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "Fail",
        "func": "var fail = {}\nfail.payload = \"Email already exists\"\nfail.topic = \"Fail\"\n\nreturn fail;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 2160,
        "wires": [
            [
                "1eb0a4ce1a46c21a"
            ]
        ]
    },
    {
        "id": "50acca37cac2a048",
        "type": "ui_form",
        "z": "c68563f010daea6a",
        "g": "bf6e921c7de48a87",
        "name": "Add email to receive notification",
        "label": "",
        "group": "242bb5e8cc6e236f",
        "order": 5,
        "width": 7,
        "height": 1,
        "options": [
            {
                "label": "Email",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "email": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 170,
        "y": 2100,
        "wires": [
            [
                "ea0fef03917375ca",
                "1caa511779264a3b"
            ]
        ]
    },
    {
        "id": "7ac938c605cb2214",
        "type": "change",
        "z": "c68563f010daea6a",
        "g": "ca41d32fdb39d00a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Log in\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 380,
        "wires": [
            [
                "240704a3466822c8"
            ]
        ]
    },
    {
        "id": "75d3d32f0e01ed92",
        "type": "inject",
        "z": "c68563f010daea6a",
        "g": "b07a23ec1bd6e5b5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1130,
        "y": 660,
        "wires": [
            [
                "a80d1d7375cad5af"
            ]
        ]
    },
    {
        "id": "d2c5e880e2c1d4cb",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "a81bdc89d7d05b5f",
        "name": "Sending Email (msg.payload = string message)",
        "func": "msg.topic = \"Message\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1260,
        "wires": [
            [
                "62e2f6c172f9c40f",
                "dffa474c79b55907"
            ]
        ]
    },
    {
        "id": "62e2f6c172f9c40f",
        "type": "http request",
        "z": "c68563f010daea6a",
        "g": "a81bdc89d7d05b5f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2622720/fields/1.json?api_key=FWIW2JFTHTTADZO1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 1100,
        "wires": [
            [
                "cc85758536fe0394"
            ]
        ]
    },
    {
        "id": "cc85758536fe0394",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "a81bdc89d7d05b5f",
        "name": "Get Email List",
        "func": "let databaseEmails = JSON.stringify(msg.payload, null, 4);\n// Example string: '\\\\\"field1\\\\\":\\\\\"email1@gmail.com\\\\\",\\\\\"field1\\\\\":\\\\\"email2@gmail.com\\\\\"'\nlet feedsIndex = databaseEmails.indexOf('\\\\\"feeds\\\\\"');\ndatabaseEmails = databaseEmails.substring(feedsIndex);\n// Define an empty array to hold the extracted emails\nlet emailList = [];\n\n// Use a regular expression to match all email addresses\nlet emailRegex = /\\\\\"field1\\\\\":\\\\\"(.*?)\\\\\"/g; // This regex matches anything within the escaped quotes after \"field1\":\n\nlet match;\n\nwhile ((match = emailRegex.exec(databaseEmails)) !== null) {\n    emailList.push(match[1]); // match[1] contains the email address\n}\n\nmsg.payload = emailList;\nmsg.topic = \"List\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1100,
        "wires": [
            [
                "dffa474c79b55907"
            ]
        ]
    },
    {
        "id": "ad6140198b29e5ed",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "a81bdc89d7d05b5f",
        "name": "Loop",
        "func": "let emailList = msg.payload;\nif (emailList.length == 0) {\n    return null;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1100,
        "wires": [
            [
                "5f5ea9a116ca3cda"
            ]
        ]
    },
    {
        "id": "ce88d448e39cc072",
        "type": "e-mail",
        "z": "c68563f010daea6a",
        "g": "a81bdc89d7d05b5f",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Send Email",
        "x": 1030,
        "y": 1180,
        "wires": []
    },
    {
        "id": "5f5ea9a116ca3cda",
        "type": "function",
        "z": "c68563f010daea6a",
        "g": "a81bdc89d7d05b5f",
        "name": "User Emails",
        "func": "let emailList = msg.payload.List; // The list of email addresses\nvar email = {}; // Object to store the email properties\nvar list = {}; // Object to store the remaining email list\n\n// Pop the first email from the list\nlet e = emailList.shift();\n\n// Set the 'to' and 'payload' properties for the email\nemail.to = e;\nemail.topic = \"Node-red\"\nemail.payload = msg.payload.Message;\n\n// Set the remaining emails in 'list'\nlist.payload = emailList;\n\n// Return both objects\nreturn [email, list];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1260,
        "wires": [
            [
                "ce88d448e39cc072"
            ],
            [
                "ad6140198b29e5ed"
            ]
        ]
    },
    {
        "id": "dffa474c79b55907",
        "type": "join",
        "z": "c68563f010daea6a",
        "g": "a81bdc89d7d05b5f",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 1260,
        "wires": [
            [
                "5f5ea9a116ca3cda"
            ]
        ]
    },
    {
        "id": "ad28cdb7b028f950",
        "type": "ui_spacer",
        "z": "c68563f010daea6a",
        "name": "spacer",
        "group": "a41ff99becdf55cd",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "895dc58ad16352c8",
        "type": "ui_spacer",
        "z": "c68563f010daea6a",
        "name": "spacer",
        "group": "a41ff99becdf55cd",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "4358d5e72b77008d",
        "type": "ui_spacer",
        "z": "c68563f010daea6a",
        "name": "spacer",
        "group": "242bb5e8cc6e236f",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "e1c237fbdd38aad5",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.21.57.182",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "242bb5e8cc6e236f",
        "type": "ui_group",
        "name": "Switch",
        "tab": "6ba0c56fa3a08f57",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1aef56c328c2c49",
        "type": "ui_group",
        "name": "Status",
        "tab": "6ba0c56fa3a08f57",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "975a56c88443a6df",
        "type": "ui_group",
        "name": "Display",
        "tab": "6ba0c56fa3a08f57",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a41ff99becdf55cd",
        "type": "ui_group",
        "name": "Login",
        "tab": "3ff6f6dc28002473",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0c9715f080d9707a",
        "type": "ui_group",
        "name": "Register",
        "tab": "499e76dd4fa8167b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6ba0c56fa3a08f57",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "3ff6f6dc28002473",
        "type": "ui_tab",
        "name": "Log in",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "499e76dd4fa8167b",
        "type": "ui_tab",
        "name": "Register",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": true
    }
]